{"version":3,"sources":["components/previewer.js","store/initial_input.js","store/input_slice.js","components/editor.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["Previewer","marked","setOptions","breaks","gfm","inputText","useSelector","state","value","className","id","dangerouslySetInnerHTML","__html","initialInput","initialState","inputSlice","createSlice","name","reducers","setText","action","payload","actions","Editor","dispatch","useDispatch","src","style","textAlign","onChange","e","target","typeof","spellCheck","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","inputReducer","ReactDOM","render","document","getElementById"],"mappings":"iSAqBeA,EAjBG,WAChBC,IAAOC,WAAW,CAChBC,QAAQ,EACRC,KAAK,IAEP,IAAMC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,UAAUG,SACzD,OACE,gCACE,oBAAIC,UAAU,SAAd,oBACA,qBACEC,GAAG,UACHC,wBAAyB,CAAEC,OAAQX,IAAOI,UCfrCQ,EAAY,+DAIvB,2BAJuB,YAOvB,QAPuB,KAQvB,uBARuB,KASvB,MATuB,wYAwBa,cAxBb,2G,OCGnBC,EAAe,CACnBN,MAAOK,GAGHE,EAAaC,YAAY,CAC7BC,KAAM,YACNH,eACAI,SAAU,CACRC,QAAS,SAACZ,EAAOa,GACfb,EAAMC,MAAQY,EAAOC,YAKZF,EAAYJ,EAAWO,QAAvBH,QACAJ,IAAf,QCQeQ,G,MArBA,WACb,IAAMC,EAAWC,cAIjB,OACE,gCACE,wBAAQC,IAAI,sDACZ,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,4BACA,0BACElB,GAAG,SACHmB,SATc,SAACC,GACnBN,EAASL,EAAQW,EAAEC,OAAOvB,SAStBwB,OAAO,OACPC,WAAW,QAJb,SAMGpB,S,MCHMqB,MAbf,WACE,OACE,sBAAKzB,UAAU,MAAf,UACE,qDACA,uBACA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCCO0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCECQ,EANDC,YAAe,CAC3BC,QAAS,CACPzC,UAAW0C,KCEfC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAGFM,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.5e8f9770.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\nimport marked from \"marked\";\nimport \"./previewer.css\";\n\nconst Previewer = () => {\n  marked.setOptions({\n    breaks: true,\n    gfm: true,\n  });\n  const inputText = useSelector((state) => state.inputText.value);\n  return (\n    <div>\n      <h2 className=\"result\">result</h2>\n      <div\n        id=\"preview\"\n        dangerouslySetInnerHTML={{ __html: marked(inputText) }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Previewer;\n","export const initialInput = `\n# Sample Markdown Previewer \n----\n## h2 Heading\n${\"`this is an inline code`\"}\n\n---\n${\"```js\"}\n${\"this is a code block\"}\n${\"```\"}\n---\nour list item: \n1. first item\n2. second item\n\n> here is a block quote.\n>\n>> nested block quote.\n\nit also supports images!\n\n![nodejs image](https://res.cloudinary.com/practicaldev/image/fetch/s--_pyWGSyD--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/w9u60357jk4ozdho7urq.jpg)\n\n\nText attributes *italic*, **bold**, ${\"`monospace`\"}, ~~strikethrough~~ .\n\n---\n\n#### Created by:\n> [Amir Yeganeh](https://github.com/amiryeg1)\n<br>\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { initialInput } from \"./initial_input\";\n\nconst initialState = {\n  value: initialInput,\n};\n\nconst inputSlice = createSlice({\n  name: \"inputText\",\n  initialState,\n  reducers: {\n    setText: (state, action) => {\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const { setText } = inputSlice.actions;\nexport default inputSlice.reducer;\n","import { initialInput } from \"../store/initial_input\";\nimport { setText } from \"../store/input_slice\";\nimport { useDispatch } from \"react-redux\";\nimport \"./editor.css\";\n\nconst Editor = () => {\n  const dispatch = useDispatch();\n  const textHandler = (e) => {\n    dispatch(setText(e.target.value));\n  };\n  return (\n    <div>\n      <script src=\"https://cdn.jsdelivr.net/npm/marked/marked.min.js\"></script>\n      <h2 style={{ textAlign: \"center\" }}>enter markdown</h2>\n      <textarea\n        id=\"editor\"\n        onChange={textHandler}\n        typeof=\"text\"\n        spellCheck=\"false\"\n      >\n        {initialInput}\n      </textarea>\n    </div>\n  );\n};\n\nexport default Editor;\n","import Previewer from \"./components/previewer\";\nimport Editor from \"./components/editor\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1> markdown previewer</h1>\n      <hr />\n      <div className=\"container\">\n        <Editor />\n        <Previewer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport inputReducer from \"./input_slice\";\n\nconst store = configureStore({\n  reducer: {\n    inputText: inputReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}